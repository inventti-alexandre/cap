@using Cap.Web.Common.Bind;
@model Cap.Domain.Models.Cap.PesquisaModel

@{
    ViewBag.Title = "Pesquisa";
}

<h2>Pesquisa</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdDepartamento, htmlAttributes: new { @class = "control-label" })
                @Html.SelectDepartamento(Model.IdDepartamento, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.IdFornecedor, htmlAttributes: new { @class = "control-label" })
                @Html.SelectDepartamento(Model.IdFornecedor, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.NF, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.NF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NF, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.NN, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.NN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Inicial, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Inicial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inicial, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Final, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Final, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Final, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.IdPgto, htmlAttributes: new { @class = "control-label" })
                @Html.SelectPgto(Model.IdPgto, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.IdPedido, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.IdPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdFPgto, htmlAttributes: new { @class = "control-label" })
                @Html.SelectFPgto(Model.IdFPgto, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.IdBanco, htmlAttributes: new { @class = "control-label" })
                @Html.SelectBanco(Model.IdBanco, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.IdConta, htmlAttributes: new { @class = "control-label" })
                @Html.SelectConta(Model.IdConta, true)
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Cheque, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cheque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cheque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Observ, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Observ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observ, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PesquisarPorDataPagamento, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.PesquisarPorDataPagamento)
                    @Html.ValidationMessageFor(model => model.PesquisarPorDataPagamento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.MaiorQue, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.MaiorQue)
                    @Html.ValidationMessageFor(model => model.MaiorQue, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.MenorQue, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.MenorQue)
                    @Html.ValidationMessageFor(model => model.MenorQue, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <input type="button" value="Pesquisar" id="pesquisar" name="pesquisar" class="btn btn-primary" />
                @Html.ActionLink("Limpar", "Index", "Pesquisa", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>

    <div id="parcelas">
    </div>

}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $("document").ready(function () {

        $("#pesquisar").click(function () {

            var idDepartamento = $("#IdDepartamento").val();
            var idFornecedor = $("#IdFornecedor").val();
            var nf = $("#NF").val();
            var nn = $("#NN").val();
            var inicial = $("#Inicial").val();
            var final = $("#Final").val();
            var idPgto = $("#IdPgto").val();
            var idPedido = $("#IdPedido").val();
            var idFPgto = $("#IdFPgto").val();
            var idBanco = $("#IdBanco").val();
            var idconta = $("#IdConta").val();
            var cheque = $("#Cheque").val();
            var observ = $("#Observ").val();
            var pesquisarPorDataPagamento = $("#PesquisarPorDataPagamento").is(":checked");
            var maiorQue = $("#MaiorQue").is(":checked");
            var menorQue = $("#MenorQue").is(":checked");

            $.ajax({
                url: '@Url.Action("Pesquisar", "Pesquisa")',
                data: {
                    'IdDepartamento': idDepartamento,
                    'IdFornecedor': idFornecedor,
                    'NF': nf,
                    'Inicial': inicial,
                    'Final': final,
                    'IdPgto': idPgto,
                    'IdPedido': idPedido,
                    'IdFPgto': idFPgto,
                    'IdBanco': idBanco,
                    'IdConta': idconta,
                    'Cheque': cheque,
                    'Observ': observ,
                    'PesquisarPorDataPagamento': pesquisarPorDataPagamento,
                    'MaiorQue': maiorQue,
                    'menorQue': menorQue
                },
                datatype: 'html',
                cache: false,
                success: function (result) {
                    $("#parcelas").html(result);
                }//,
                //error: function (xhr, ajaxOptions, thrownError) { alert(xhr.responseText); }
            })
        });

    });
</script>