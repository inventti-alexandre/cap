@using System.ComponentModel.DataAnnotations;
@using Cap.Domain.Models.Cap;
@model IEnumerable<Cap.Domain.Models.Cap.ContaFinanceira>

@{
    ViewBag.Title = "Contas financeiras";
}

<h2>Contas financeiras</h2>

<p>
    @Html.ActionLink("Nova conta financeira", "Create", new { idGrupoFinanceiro = (int)ViewBag.IdGrupoFinanceiro })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IdGrupoFinanceiro)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Descricao)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TipoConta)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contabiliza)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ativo)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.GrupoFinanceiro.Descricao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Descricao)
        </td>
        <td>
            @{ 
                var enumAtual = (TipoConta)item.TipoConta;
                var type = typeof(TipoConta);
                var member = type.GetMember(enumAtual.ToString());
                var attributes = member[0].GetCustomAttributes(typeof(DisplayAttribute), false);
                var name = ((DisplayAttribute)attributes[0]).Name;
            }
            @Html.DisplayFor(t => name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Contabiliza)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ativo)
        </td>
        <td>
            @Html.ActionLink("Editar", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Detalhes", "Details", new { id=item.Id }) |
            @Html.ActionLink("Excluir", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

@Html.ActionLink("Voltar", "Index", "GrupoFinanceiro")